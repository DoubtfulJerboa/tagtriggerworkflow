name: helloworld

on: 
    release:
      types: [published]
      # when publishing a release targetting a specific branch or commit, it will run the workflow that exists in that specified target - so targetting develop will run the workflow that is stored in develop, so watch out if youve changed the workflow


jobs:
  fetch-environments:
    runs-on: ubuntu-latest
    outputs: 
      enviros: ${{ steps.get-envs.outputs.envs }}
    steps:
      - id: get-envs
        run: |            
          # environments=()
          # pageNum=1
          # total=1
          
          # while [ ${#environments[@]} -lt $total ]; do
          #     res=$(curl -s -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{github.token}}" "https://api.github.com/repos/${{github.repository}}/environments?per_page=100&page=$pageNum")
              
          #     envs=($(echo "$res" | jq -r '.environments[].name'))
          #     total=$(echo "$res" | jq -r '.total_count')
              
          #     if [ ${#envs[@]} -eq 0 ]; then
          #         echo "An error has occurred while attempting to fetch the environments"
          #         exit 1
          #     fi
              
          #     environments+=("${envs[@]}")
          #     ((pageNum++))
          # done
          
          # envlist=$(printf '%s\n' "${environments[@]}" | jq -R . | jq -sc .) >> "$GITHUB_OUTPUT"

          envlist=("production", "develop")
          echo envs=$envlist
          # eg ["production","develop"]

          echo envs=$envlist >> $GITHUB_OUTPUT

  # fetch-release-details:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     TAG_NAME: ${{github.event.release.tag_name}}
  #     IS_PRE: ${{ github.event.release.prerelease }}
  #   steps:
      
  #     # - name: Checkout Repository
  #     #   uses: actions/checkout@v3

  #     - id: get-tag
  #       run: echo "tag=${{github.event.release.tag_name}}" >> "$GITHUB_OUTPUT"          

  #     - name: Use Release Details
  #       run: |
  #         echo "Using Release Tag: ${{github.event.release.tag_name}}"
  #         echo "Using Release ID: ${{github.event.release.id}}"
  
  # fetch-branch-name:
  #   runs-on: ubuntu-latest
  #   outputs: 
  #     enviros: ${{ github.event.release.target_commitish }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #     - run: echo ${{ github.event.release.target_commitish }}
  #     - run: echo helloworld
  #     - id: get-name
  #       run: echo "tag=${{ github.event.release.target_commitish }}" >> "$GITHUB_OUTPUT" 

  think:
    runs-on: ubuntu-latest
    needs: fetch-environments
    outputs: 
      version: ${{github.event.release.tag_name}}
      environment: ${{steps.calculate-slot.outputs.environment}}
      slot: ${{steps.calculate-slot.outputs.slot}}
    steps:
      - id: calculate-slot
        run: |
          if [[ "${{github.event.release.target_commitish}}" == "main" ]]; then
              environment="production"
              if [[ "${{github.event.release.prerelease}}" == "true" ]]; then
                  slot="pre-prod"
              else
                  slot=""
              fi
          else
              if [[ "${{github.event.release.prerelease}}" == "false" ]]; then
                  echo "Error: Non pre-release on a non-main branch" >&2
                  exit 1
              fi

              slot="${{github.event.release.target_commitish}}"
              if [[ " ${${{needs.fetch-environments.outputs.enviros}}[@]} " =~ " ${${{github.event.release.target_commitish}}} " ]]; then
                  environment="${{github.event.release.target_commitish}}"
              else
                  environment="develop"
              fi
          fi

          echo "Version: ${{github.event.release.tag_name}}"
          echo "Environment: $environment"
          echo "Slot: $slot"

          echo "environment=$environment" >> $GITHUB_OUTPUT
          echo "slot=$slot" >> $GITHUB_OUTPUT