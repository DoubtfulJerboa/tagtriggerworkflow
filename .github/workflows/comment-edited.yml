name: label checkbox

on:
  issue_comment:
    # there is no PR comment trigger, PRs are considered issues in the backend, just have to filter
    types: [edited]
    
permissions:
    pull-requests: write   

jobs:
  add-checkbox-label:
    runs-on: ubuntu-latest
    steps:
      - name: Check if Comment is from GitHub Actions
        id: check-author
        uses: actions/github-script@v7
        with:
          script: |
            const author = context.payload.comment.user.login;
            console.log(`Comment author: ${author}`);
            core.setOutput("bot-comment", author === "github-actions[bot]" ? "true" : "false");

      - name: Get release type from comment
        id: get-type
        if: steps.check-author.outputs.bot-comment == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            if (!context.payload.issue.pull_request) {
              console.log("Not PR comment, skipping.")
              return;
            }

            let labelToAdd = null;
            if (context.payload.comment.body.includes("- [x] major")) {
              labelToAdd = "release/major";
            } else if (context.payload.comment.body.includes("- [x] minor")) {
              labelToAdd = "release/minor";
            } else if (context.payload.comment.body.includes("- [x] patch")) {
              labelToAdd = "release/patch";
            }

            if (!labelToAdd) {
              console.log("No checkbox is checked, skipping.");
            }
            core.setOutput("release-label", labelToAdd)

      - name: Get existing labels in PR
        id: get-existing-labels
        if: steps.check-author.outputs.bot-comment == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: existingLabels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
            });

            const releaseLabels = ["release/major", "release/minor", "release/patch"];
            const labelsToRemove = existingLabels
              .map(label => label.name)
              .filter(name => releaseLabels.includes(name) && name !== "${{steps.get-type.outputs.release-label}}");

            for (const label of labelsToRemove) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                name: label,
              });
              console.log(`Removed label: ${label}`);
            }

      - name: Check if label exists & create
        id: create-labels
        if: steps.get-type.outputs.release-label != ''
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: "${{steps.get-type.outputs.release-label}}",
              });
            } catch (error) { 
              console.log(`Label '${{steps.get-type.outputs.release-label}}' does not exist, creating.`);
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: "${{steps.get-type.outputs.release-label}}",
                color: "ffffff", 
                description: `Release type: ${{steps.get-type.outputs.release-label}}`,
              });
            }

      - name: Add label to PR
        id: add-label
        if: steps.get-type.outputs.release-label != ''
        uses: actions/github-script@v7
        with:
          script: |            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              labels: ["${{steps.get-type.outputs.release-label}}"],
            });

            console.log(`Added label: ${{steps.get-type.outputs.release-label}}`);
