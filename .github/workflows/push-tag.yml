name: abc

on: 
  push:
    branches:
      - main
      - develop
      - dev-branch

jobs:
  find-previous-version:
    runs-on: ubuntu-latest
    outputs:
      prev-ver: ${{steps.outputs.latest-git-tag.tag}}
      major: ${{steps.outputs.check-tag.major}}
      minor: ${{steps.outputs.check-tag.minor}}
      patch: ${{steps.outputs.check-tag.patch}}
      prerelease: ${{steps.outputs.check-tag.prerelease}}
      buildmetadata: ${{steps.outputs.check-tag.buildmetadata}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: latest-git-tag
        run: |
            tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            echo tag=$tag >> $GITHUB_OUTPUT
      - run: git describe --tags --abbrev=0
        continue-on-error: true

      - run: git describe --tags
        continue-on-error: true 
      
      - run: git show-ref --tags -d
        continue-on-error: true 
      - run: git tag -l
        continue-on-error: true 

      - run: git tag --sort=-creatordate
        continue-on-error: true 
        
      - run: echo "${{ env.tag }}"
      - run: echo $tag
      - id: check-tag
        if: env.tag != ''
        run: |
          if [[ "${{ env.tag }}" =~ ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$ ]]; then
              echo "major=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
              echo "minor=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
              echo "patch=${BASH_REMATCH[3]}" >> $GITHUB_OUTPUT
              echo "prerelease=${BASH_REMATCH[4]}" >> $GITHUB_OUTPUT
              echo "buildmetadata=${BASH_REMATCH[5]}" >> $GITHUB_OUTPUT
          else
              echo "Tag ${{ env.tag }} is NOT VALID"
              exit 1
          fi
  generate-version:
    runs-on: ubuntu-latest
    needs: find-previous-version
    outputs:
      version: ${{ env.nextversion }}
    steps:
      - id: default-main
        if: needs.find-previous-version.outputs.prev-ver == '' && github.event.ref == 'refs/heads/main'
        run: echo "nextversion=1.0.0" >> $GITHUB_ENV
        
      - id: default-develop
        # there isnt much point to this defaulting to 0.1.0 on develop if develop tags never get 
        if: needs.find-previous-version.outputs.prev-ver == '' && github.event.ref != 'refs/heads/main'
        run: echo "nextversion=0.1.0" >> $GITHUB_ENV

      - id: calculate-new
        if: needs.find-previous-version.outputs.prev-ver != ''
        # placeholder
        run: echo "nextversion=1.2.3" >> $GITHUB_ENV

  print-version:
    if: false
    runs-on: ubuntu-latest
    needs: generate-version
    steps:
      - run: echo ${{needs.generate-version.outputs.version}}
