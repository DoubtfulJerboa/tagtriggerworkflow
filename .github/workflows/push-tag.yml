name: abc

on: 
  push:
    branches:
      - main
      - develop

permissions:
  contents: write        

jobs:
  generate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{env.nextversion}}
      # major: ${{steps.outputs.check-tag.group1}}
      # minor: ${{steps.outputs.check-tag.group2}}
      # patch: ${{steps.outputs.check-tag.group3}}
      # prerelease: ${{steps.outputs.check-tag.group4}}
      # buildmetadata: ${{steps.outputs.check-tag.group5}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - id: get-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        with: 
          semver_only: true
          
      - id: default-main
        if: steps.get-tag.outputs.tag == '' && github.event.ref == 'refs/heads/main'
        run: echo "nextversion=1.0.0" >> $GITHUB_ENV
        
      - id: default-develop
        # there isnt much point to this defaulting to 0.1.0 on develop if develop tags never get 
        if: steps.get-tag.outputs.tag == '' && github.event.ref != 'refs/heads/main'
        run: echo "nextversion=0.1.0" >> $GITHUB_ENV

      - id: get-PR
        if: steps.get-tag.outputs.tag != ''
        uses: actions-ecosystem/action-get-merged-pull-request@v1
        with: 
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo ${{steps.get-PR.outputs.title}}
          echo ${{steps.get-PR.outputs.body}}
          echo ${{steps.get-PR.outputs.number}}
          echo ${{steps.get-PR.outputs.labels}}

      - id: get-PR-level
        uses: actions-ecosystem/action-release-label@v1
        with: 
          label_prefix: release/
          labels: ${{steps.get-PR.outputs.labels}}

      # - id: calculate-level
      #   if: steps.get-tag.outputs.tag != ''
      #   # TODO check if was a merged PR - if yes, get pr label - if no its a patch
      #   run: |
      #     major=false
      #     minor=false

      #     for commit in $(jq -r '.[].message' <<< '${{ toJson(github.event.commits) }}'); do
      #       echo $commit
      #       if [[ $commit == "" ]]; then
      #         continue
      #       fi
      #       if [[ "${commit,,}" =~ major || "${commit,,}" =~ breaking ]]; then
      #         major=true
      #       fi

      #       if [[ "${commit,,}" =~ feature ]]; then
      #         minor=true
      #       fi

      #     done

      #     if $major; then
      #       echo "level=major" >> $GITHUB_OUTPUT
      #     elif $minor; then
      #       echo "level=minor" >> $GITHUB_OUTPUT
      #     else
      #       echo "level=patch" >> $GITHUB_OUTPUT
      #     fi          

      - if: ${{ steps.release-label.outputs.level != null }}
        run: echo "releaselevel=${{steps.release-label.outputs.level}}" >> $GITHUB_ENV

      
      - if: ${{ steps.release-label.outputs.level == null }}
        run: echo "releaselevel=patch" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-bump-semver@v1
        if: steps.get-tag.outputs.tag != ''
        id: bump-semver
        with:
          current_version: ${{ steps.get-tag.outputs.tag }}
          level: ${{env.releaselevel}}
      
      - id: semver-to-env
        run: echo "nextversion=${{steps.bump-semver.outputs.new_version}}" >> $GITHUB_ENV

      - if: github.event.ref == 'refs/heads/main'
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ env.nextversion }}
        
  print-version:
    runs-on: ubuntu-latest
    needs: generate-version
    steps:
      - run: echo ${{needs.generate-version.outputs.version}}

  # TODO add the extra semver properties depending on branch before finally returning out of workflow